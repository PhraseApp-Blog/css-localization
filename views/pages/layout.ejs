<h1>Layout</h1>
<p>
  Many strides have been made to faciliate working with
  right-to-left and vertical layouts.
</p>

<h2>Writing mode (vertical text)</h2>
<p>
  Use the <code>vertical-rl</code> and
  <code>vertical-lr</code> values of the
  <code>writing-mode</code> property of an element to make
  its text vertical.
</p>

<div class="demo-container vertical-demo mbe-2">
  <div class="vertical-rl-demo demo-box">
    This block has a
    <code>writing-mode: vertical-lr</code> set. It flows top
    to bottom, then right to left.
  </div>
  <div class="vertical-lr-demo demo-box">
    This block has a
    <code>writing-mode: vertical-rl</code> set. It flows top
    to bottom, then left to right.
  </div>
</div>

<p>
  The container direction will affect vertical text. See for
  yourself:
</p>
<%- include('../partials/direction_buttons') %>

<p>
  Vertical layouts are traditionally used for East Asian
  languages. The first block is left to right, the second
  right to left.
</p>

<div class="demo-container vertical-demo mbe-4" lang="jp">
  <div class="vertical-lr-demo demo-box">
    ワールド・ワイド・ウェッブを世界中に広げましょう。
  </div>
  <div class="vertical-rl-demo demo-box">
    ワールド・ワイド・ウェッブを世界中に広げましょう。
  </div>
</div>

<h2>Logical properties</h2>
<p>
  When working with vertical and/or rtl layouts, prefer
  logical properties to their physical counterparts.
</p>

<h3>Sizing</h3>
<div class="demo-container sizing-demo" id="sizing-demo">
  <div class="sizing-physical-demo demo-box">
    This block is sized with physical values:
    <code>height</code>, <code>width</code>, etc.
  </div>
  <div class="sizing-logical-demo demo-box">
    This block is sized with logical values:
    <code>block-size</code>, <code>inline-size</code>.
  </div>
</div>

<p>
  Logical sizing adapts to the block's writing mode. To see
  this in action, change the writing mode of the above
  blocks using these buttons:
</p>

<%- include('../partials/writing_mode_buttons', { target:
'#sizing-demo .demo-box' }) %>

<h3>Positioning</h3>
<div class="relative demo-container positioning-demo">
  <div class="absolute-physical-demo demo-box">
    This block is placed with physical absolute values;
    <code>top</code>, <code>left</code>, etc.
  </div>
</div>
<div class="relative demo-container positioning-demo mbs-1">
  <div class="absolute-logical-demo demo-box">
    This block is placed with logical absolute values;
    <code>inset-inline-start</code>, etc.
  </div>
</div>

<p>
  Change the document direction using the buttons below to
  see the difference between physical and logical absolute
  positioning.
</p>
<%- include('../partials/direction_buttons') %>

<h3>Margin and padding</h3>
<div class="demo-container spacing-demo" id="spacing-demo">
  <div class="spacing-physical-demo demo-box">
    This block is spaced with physical values:
    <code>margin-top</code>, <code>padding-left</code>.
  </div>
  <div class="spacing-logical-demo demo-box">
    This block is spaced with logical values:
    <code>margin-block-start</code>,
    <code>padding-inline-start</code>.
  </div>
</div>

<p>
  Logical margin and padding adapt to the block's writing
  mode and direction. Try it out:
</p>
<%- include('../partials/writing_mode_buttons', { target:
'#spacing-demo .demo-box' }) %> <%-
include('../partials/direction_buttons') %>

<h3>Borders</h3>
<p>
  Unlike physical borders, logical borders adapt to both
  writing mode and direction.
</p>

<div class="demo-container border-demo" id="border-demo">
  <div class="border-physical-demo demo-box">
    This block has physical borders:
    <code>border-top</code>, <code>border-left</code>, etc.
  </div>
  <div class="border-logical-demo demo-box">
    This block has logical borders:
    <code>border-block</code>, <code>border-inline</code>.
  </div>
</div>

<%- include('../partials/writing_mode_buttons', { target:
'#border-demo .demo-box' }) %> <%-
include('../partials/direction_buttons') %>
